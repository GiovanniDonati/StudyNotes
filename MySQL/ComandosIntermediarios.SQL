CREATE TABLE CLIENTES (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(60) NOT NULL,
    CPF CHAR(11) NOT NULL,
    EMAIL VARCHAR(80) NOT NULL,
    ATIVO BIT NOT NULL,
    DATANASCIMENTO DATE NOT NULL,
)

CREATE TABLE PRODUTOS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    DESCRICAO VARCHAR(60) NOT NULL,
    QTDESTOQUE FLOAT NOT NULL,
    PRECO FLOAT NOT NULL,
    CATEGORIAID INT NOT NULL,
    FOREIGN KEY (CATEGORIAID) REFERENCES CATEGORIA (ID),
)

CREATE TABLE CATEGORIA(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(50) NOT NULL,
)

CREATE TABLE VENDAS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    DATAVENDA DATE NOT NULL,
    CLIENTID INT NOT NULL,
    TOTALVENDA FLOAT NOT NULL,
    FOREIGN KEY (CLIENTESID) REFERENCES CLIENTES (ID), --> SELECIONA UMA TABELA ESPECIFICA.
)

CREATE TABLE ITENSVENDAS(
    IDPRODUTO INT NOT NULL,
    IDVENDA INT NOT NULL,
    VALORPRODUTO FLOAT NOT NULL,
    DESCONTO FLOAT NOT NULL,
    FOREIGN KEY (IDVENDA) REFERENCES VENDAS(ID),
    FOREIGN KEY (IDPRODUTO) REFERENCES PRODUTOS(ID),
    PRIMARY KEY (IDPRODUTO,IDVENDA)
)

--FAZER PESQUISAS
SELECT ID,PRECO,DESCRICAO FROM PRODUTOS --> SE SUBSTITUIR APÓS O SELECT POR *, VAI RETORNAR TODOS OS ITENS.

--FAZER PESQUISA EM TABELAS DIFERENTES
SELECT P.ID, P.DESCRICAO, P.PRECO, P.QTDESTOQUE, C.NOME,
FROM PRODUTOS P INNER JOIN CATEGORIAS C --> DIZ DE QUAL TABELA ESTÁ FALANDO E QUAL QUER LINKAR.
    ON C.ID = P.CATEGORIAID --> DIZ QUAL O DADO QUE É REFERENCIADO.

WHERE P.PRECO < 10 AND//OR P.QTDESTOQUE > 10 --> FAZ UM FILTRO DE ACORDO COM O SOLICITADO.

--FAZER CALCULOS ENTRE TABELAS
SELECT P.ID 'CÓDIGO', P.DESCRICAO, (P.PRECO * P.QTDESTOQUE)'TOTAL',
C.NOME FROM PRODUTOS P INNER JOIN CATEGORIAS C
    ON P.CATEGORIAID = C.ID 

--AGRUPAMENTE
SELECT COUNT(P.ID), C.NOME
FROM PRODUTOS P INNER JOIN CATEGORIA C 
    ON P.CATEGORIAID = C.ID
    GROUP BY P.CATEGORIAID

--ORDENAR
SELECT * FROM PRODUTOS ORDER BY PRECO